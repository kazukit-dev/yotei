import { describe, expect, test } from "vitest";

import { createSessionId, generateSessionId } from "./session-id";

// Generated by Copilot

describe("createSessionId", () => {
  test("should create valid session ID", () => {
    const result = createSessionId("session-123");

    expect(result._unsafeUnwrap()).toBe("session-123");
  });

  test("should reject null value", () => {
    const result = createSessionId(null);

    expect(result._unsafeUnwrapErr()).toBe("InvalidSessionId");
  });

  test("should reject undefined value", () => {
    const result = createSessionId(undefined as unknown as null);

    expect(result._unsafeUnwrapErr()).toBe("InvalidSessionId");
  });

  test("should reject empty string", () => {
    const result = createSessionId("");

    expect(result._unsafeUnwrapErr()).toBe("InvalidSessionId");
  });
});

describe("generateSessionId", () => {
  test("should generate unique session IDs", () => {
    const id1 = generateSessionId();
    const id2 = generateSessionId();

    expect(id1).not.toBe(id2);
  });
});
